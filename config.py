# Autogenerated config.py
#
# NOTE: config.py is intended for advanced users who are comfortable
# with manually migrating the config file on qutebrowser upgrades. If
# you prefer, you can also configure qutebrowser using the
# :set/:bind/:config-* commands without having to write a config.py
# file.
#
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Change the argument to True to still load settings configured via autoconfig.yml
config.load_autoconfig(False)

config.set('content.cookies.accept', 'never', 'chrome-devtools://*')
config.set('content.cookies.accept', 'never', 'devtools://*')
config.set('content.headers.accept_language', '', 'https://matchmaker.krunker.io/*')

# User agent to send.  The following placeholders are defined:  *
# `{os_info}`: Something like "X11; Linux x86_64". * `{webkit_version}`:
# The underlying WebKit version (set to a fixed value   with
# QtWebEngine). * `{qt_key}`: "Qt" for QtWebKit, "QtWebEngine" for
# QtWebEngine. * `{qt_version}`: The underlying Qt version. *
# `{upstream_browser_key}`: "Version" for QtWebKit, "Chrome" for
# QtWebEngine. * `{upstream_browser_version}`: The corresponding
# Safari/Chrome version. * `{upstream_browser_version_short}`: The
# corresponding Safari/Chrome   version, but only with its major
# version. * `{qutebrowser_version}`: The currently running qutebrowser
# version.  The default value is equal to the default user agent of
# QtWebKit/QtWebEngine, but with the `QtWebEngine/...` part removed for
# increased compatibility.  Note that the value read from JavaScript is
# always the global value.
# Type: FormatString
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}; rv:136.0) Gecko/20100101 Firefox/139.0', 'https://accounts.google.com/*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'chrome-devtools://*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome-devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

# Allow locally loaded documents to access remote URLs.
# Type: Bool
config.set('content.local_content_can_access_remote_urls', True, 'file:///home/fanto/.local/share/qutebrowser/userscripts/*')

# Allow locally loaded documents to access other local URLs.
# Type: Bool
config.set('content.local_content_can_access_file_urls', False, 'file:///home/fanto/.local/share/qutebrowser/userscripts/*')

# Setting dark mode
config.set("colors.webpage.darkmode.enabled", True)

# Tabs
config.set('tabs.position', 'top')
config.set('tabs.show', 'always')
config.bind('J', 'tab-next')
config.bind('K', 'tab-prev')


# Status bar Colors
config.set('colors.statusbar.normal.bg', '#0d1117')
config.set('colors.statusbar.normal.fg', '#ffffff')

# Tabs Colors
config.set('colors.tabs.bar.bg', '#0d1117')
config.set('colors.tabs.even.bg', '#011117')
config.set('colors.tabs.odd.bg', '#0d1117')
config.set('colors.tabs.selected.even.bg', '#0d1117')
config.set('colors.tabs.selected.odd.bg', '#0d1117')
config.set('colors.tabs.even.fg', '#17f501')
config.set('colors.tabs.odd.fg', '#17f501')
config.set('colors.tabs.selected.even.fg', '#ffffff')
config.set('colors.tabs.selected.odd.fg', '#ffffff')

# Hints colors
config.set('colors.hints.bg','#0d1117')
config.set('colors.hints.fg','#17f501')
config.set('colors.hints.match.fg','#ffffff')

# Completion colors
config.set('colors.completion.category.bg','#0d1117')
config.set('colors.completion.category.fg','#17f501')
config.set('colors.completion.even.bg','#0d1117')
config.set('colors.completion.odd.bg','#0d1117')
config.set('colors.completion.fg','#17f501')
config.set('colors.completion.match.fg','#ffffff')
config.set('colors.completion.item.selected.bg', '#999999')
config.set('colors.completion.item.selected.fg', '#000000')

# Font
config.set('fonts.statusbar', '10pt Jetbrains Mono Nerd Font')
config.set('fonts.completion.entry', '10pt Jetbrains Mono Nerd Font')
config.set('fonts.hints', '10pt Jetbrains Mono Nerd Font')

# Keymaps
config.bind('xb', 'config-cycle statusbar.show always never')
config.bind('xt', 'config-cycle tabs.show always never')



